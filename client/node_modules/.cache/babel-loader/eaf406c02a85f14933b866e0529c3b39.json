{"ast":null,"code":"var _jsxFileName = \"/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/BookList.js\";\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBooksQuery } from \"../queries/queries\"; // components\n\nimport BookDetails from \"./BookDetails\";\nexport class BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  displayBooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Loading books...\");\n    } else {\n      return data.books.map(book => {\n        return React.createElement(\"li\", {\n          key: book.id,\n          onClick: e => {\n            this.setState({\n              selected: book.id\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, book.name);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"book-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.displayBooks()), React.createElement(BookDetails, {\n      bookId: this.state.selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n} // binding query to component (getBooksQuery)(BookList)\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/BookList.js"],"names":["React","Component","graphql","getBooksQuery","BookDetails","BookList","constructor","props","state","selected","displayBooks","data","loading","books","map","book","id","e","setState","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AACtCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AACDC,EAAAA,YAAY,GAAG;AACb,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAtB;;AACA,QAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD,KAFD,MAEO;AACL,aAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAC5B,eACE;AACE,UAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,UAAA,OAAO,EAAEC,CAAC,IAAI;AACZ,iBAAKC,QAAL,CAAc;AAAET,cAAAA,QAAQ,EAAEM,IAAI,CAACC;AAAjB,aAAd;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMGD,IAAI,CAACI,IANR,CADF;AAUD,OAXM,CAAP;AAYD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB,KAAKV,YAAL,EAApB,CADF,EAEE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjCqC,C,CAmCxC;;AACA,eAAeP,OAAO,CAACC,aAAD,CAAP,CAAuBE,QAAvB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBooksQuery } from \"../queries/queries\";\n// components\nimport BookDetails from \"./BookDetails\";\n\nexport class BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n  displayBooks() {\n    var data = this.props.data;\n    if (data.loading) {\n      return <div>Loading books...</div>;\n    } else {\n      return data.books.map(book => {\n        return (\n          <li\n            key={book.id}\n            onClick={e => {\n              this.setState({ selected: book.id });\n            }}\n          >\n            {book.name}\n          </li>\n        );\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <ul id=\"book-list\">{this.displayBooks()}</ul>\n        <BookDetails bookId={this.state.selected} />\n      </div>\n    );\n  }\n}\n// binding query to component (getBooksQuery)(BookList)\nexport default graphql(getBooksQuery)(BookList);\n"]},"metadata":{},"sourceType":"module"}