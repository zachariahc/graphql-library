{"ast":null,"code":"var _jsxFileName = \"/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/BookList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries'; // components\n\nimport BookDetails from './BookDetails';\nexport class BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null\n    };\n  }\n\n  displayBooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Loading books...\");\n    } else {\n      return data.books.map(book => {\n        return React.createElement(\"li\", {\n          key: book.id,\n          onClick: e => {\n            this.setState({\n              selected: book.id\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, book.name);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"book-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.displayBooks()), React.createElement(BookDetails, {\n      bookId: this.state.selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n} // binding query to component (getBooksQuery)(BookList)\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/BookList.js"],"names":["React","Component","graphql","getBooksQuery","BookDetails","BookList","constructor","props","state","selected","displayBooks","data","loading","books","map","book","id","e","setState","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGH;;AACDC,EAAAA,YAAY,GAAE;AACV,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAtB;;AACA,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,KAFD,MAEO;AACH,aAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,IAAI,IAAI;AAC3B,eACA;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,UAAA,OAAO,EAAGC,CAAD,IAAO;AAAC,iBAAKC,QAAL,CAAc;AAAET,cAAAA,QAAQ,EAAEM,IAAI,CAACC;AAAjB,aAAd;AAAqC,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2ED,IAAI,CAACI,IAAhF,CADA;AAGH,OAJM,CAAP;AAKH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKV,YAAL,EADL,CADJ,EAII,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AA5BmC,C,CA8BxC;;AACA,eAAeP,OAAO,CAACC,aAAD,CAAP,CAAuBE,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries'\n// components\nimport BookDetails from './BookDetails'\n\nexport class BookList extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          selected: null  \n        }\n    }\n    displayBooks(){\n        var data = this.props.data\n        if(data.loading){\n            return(<div>Loading books...</div>)\n        } else {\n            return data.books.map( book => {\n                return(\n                <li key={book.id} onClick={(e) => {this.setState({ selected: book.id })}}>{book.name}</li>\n                )\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <ul id=\"book-list\">\n                    {this.displayBooks()}\n                </ul>\n                <BookDetails bookId={this.state.selected}/>\n            </div>\n        )\n    }\n}\n// binding query to component (getBooksQuery)(BookList)\nexport default graphql(getBooksQuery)(BookList)\n"]},"metadata":{},"sourceType":"module"}