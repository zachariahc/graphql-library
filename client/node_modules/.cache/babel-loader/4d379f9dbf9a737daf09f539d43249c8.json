{"ast":null,"code":"var _jsxFileName = \"/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/BookDetails.js\";\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBookQuery } from \"../queries/queries\";\nexport class BookDetails extends Component {\n  displayBooksDetails() {\n    const book = this.props.data.book;\n\n    if (book) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, book.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, book.genre), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, book.author.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"All books by this author\"), React.createElement(\"ul\", {\n        className: \"other-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, book.author.books.map(item => {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, item.name);\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"No Book Selected...\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"book-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.displayBooksDetails());\n  }\n\n} // binding query to component (getBooksQuery)(BookList)\n\nexport default graphql(getBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/BookDetails.js"],"names":["React","Component","graphql","getBookQuery","BookDetails","displayBooksDetails","book","props","data","name","genre","author","books","map","item","id","render","options","variables","bookId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAO,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACzCI,EAAAA,mBAAmB,GAAG;AAAA,UACZC,IADY,GACH,KAAKC,KAAL,CAAWC,IADR,CACZF,IADY;;AAEpB,QAAIA,IAAJ,EAAU;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACG,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,IAAI,CAACI,KAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,IAAI,CAACK,MAAL,CAAYF,IAAhB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJF,EAKE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC7B,eAAO;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBD,IAAI,CAACL,IAAxB,CAAP;AACD,OAFA,CADH,CALF,CADF;AAaD,KAdD,MAcO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;AACF;;AACDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,mBAAL,EADH,CADF;AAKD;;AA3BwC,C,CA6B3C;;AACA,eAAeH,OAAO,CAACC,YAAD,EAAe;AACnCc,EAAAA,OAAO,EAAEV,KAAK,IAAI;AAChB,WAAO;AACLW,MAAAA,SAAS,EAAE;AACTH,QAAAA,EAAE,EAAER,KAAK,CAACY;AADD;AADN,KAAP;AAKD;AAPkC,CAAf,CAAP,CAQZf,WARY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBookQuery } from \"../queries/queries\";\n\nexport class BookDetails extends Component {\n  displayBooksDetails() {\n    const { book } = this.props.data;\n    if (book) {\n      return (\n        <div>\n          <h2>{book.name}</h2>\n          <p>{book.genre}</p>\n          <p>{book.author.name}</p>\n          <p>All books by this author</p>\n          <ul className=\"other-books\">\n            {book.author.books.map(item => {\n              return <li key={item.id}>{item.name}</li>;\n            })}\n          </ul>\n        </div>\n      );\n    } else {\n        return(<div>No Book Selected...</div>)\n    }\n  }\n  render() {\n    return (\n      <div id=\"book-details\">\n        {this.displayBooksDetails()}\n      </div>\n    );\n  }\n}\n// binding query to component (getBooksQuery)(BookList)\nexport default graphql(getBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);\n"]},"metadata":{},"sourceType":"module"}