{"ast":null,"code":"var _jsxFileName = \"/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/AddBook.js\";\nimport React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\nexport class AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: ''\n    };\n  }\n\n  displayAuthors() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading authors...\");\n    } else {\n      return data.authors.map(author => {\n        return React.createElement(\"option\", {\n          key: author.id,\n          value: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Book Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Genre: \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        genre: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Author: \"), React.createElement(\"select\", {\n      onChange: e => this.setState({\n        authorId: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.displayAuthors())), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n} // binding query to component (getBooksQuery)(BookList)\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/AddBook.js"],"names":["React","Component","graphql","compose","getAuthorsQuery","addBookMutation","AddBook","constructor","props","state","name","genre","authorId","displayAuthors","data","loading","authors","map","author","id","submitForm","e","preventDefault","console","log","render","bind","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries'\n\n\nexport class AddBook extends Component {\nconstructor(props){\n    super(props)\n    this.state = {\n        name: '',\n        genre: '',\n        authorId: ''\n    }\n}\n displayAuthors(){\n    var data = this.props.data\n    if(data.loading){\n        return(<option>Loading authors...</option>)\n    }else {\n       return data.authors.map(author => {\n           return (\n               <option key={author.id} value={author.id}>{author.name}</option>\n           )\n       })\n    }\n }\n\n submitForm(e){\n    e.preventDefault()\n    console.log(this.state)\n }\n\n  render() {\n    return (\n      <form id=\"add-book\" onSubmit={ this.submitForm.bind(this) }>\n        <div className=\"field\">\n          <label>Book Name: </label>\n          <input type=\"text\" onChange={(e) => this.setState({ name: e.target.value })} />\n        </div>\n        <div className=\"field\">\n          <label>Genre: </label>\n          <input type=\"text\" onChange={(e) => this.setState({ genre: e.target.value })}/>\n        </div>\n        <div className=\"field\">\n          <label>Author: </label>\n          <select onChange={(e) => this.setState({ authorId: e.target.value })}>\n            {this.displayAuthors()}\n          </select>\n        </div>\n        <button>+</button>\n      </form>\n    );\n  }\n}\n// binding query to component (getBooksQuery)(BookList)\nexport default compose(\n    graphql(getAuthorsQuery, {name: \"getAuthorsQuery\"}),\n    graphql(addBookMutation, {name: \"addBookMutation\"})\n)(AddBook);\n"]},"metadata":{},"sourceType":"module"}