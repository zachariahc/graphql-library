{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zacharycrowell/Desktop/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\nmutation($name: String!, $genre: String!, $authorId: String!){\\n    addBook(name: $name, genre: $genre, authorId: $authorId){\\n        name\\n        id\\n    } \\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n    books{\\n        name\\n        id\\n    }\\n}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    authors {\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"apollo-boost\";\nconst getAuthorsQuery = gql(_templateObject());\nconst getBooksQuery = gql(_templateObject2()); // passing varibales to addBookMutation\n\nconst addBookMutation = gql(_templateObject3());\nexport { getAuthorsQuery, getBooksQuery, addBookMutation };","map":{"version":3,"sources":["/Users/zacharycrowell/Desktop/graphql-playlist/client/src/queries/queries.js"],"names":["gql","getAuthorsQuery","getBooksQuery","addBookMutation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,MAAMC,eAAe,GAAGD,GAAH,mBAArB;AASA,MAAME,aAAa,GAAGF,GAAH,oBAAnB,C,CAQA;;AACA,MAAMG,eAAe,GAAGH,GAAH,oBAArB;AASA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,eAAzC","sourcesContent":["import { gql } from \"apollo-boost\";\n\nconst getAuthorsQuery = gql`\n  {\n    authors {\n      name\n      id\n    }\n  }\n`\n\nconst getBooksQuery = gql`\n{\n    books{\n        name\n        id\n    }\n}\n`\n// passing varibales to addBookMutation\nconst addBookMutation = gql`\nmutation($name: String!, $genre: String!, $authorId: String!){\n    addBook(name: $name, genre: $genre, authorId: $authorId){\n        name\n        id\n    } \n  }\n`\n\nexport { getAuthorsQuery, getBooksQuery, addBookMutation }"]},"metadata":{},"sourceType":"module"}