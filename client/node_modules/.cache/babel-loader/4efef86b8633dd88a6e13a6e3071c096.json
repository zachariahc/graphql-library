{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/zacharycrowell/Desktop/graphql-playlist/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/BookList.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n    books{\\n        name\\n        id\\n    }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nconst getBooksQuery = gql(_templateObject());\nexport class BookList extends Component {\n  componentDidMount() {\n    const books = this.displayBooks();\n  }\n\n  displayBooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Loading books...\");\n    } else {\n      return data.books.map(book => {\n        return React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, book.name);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"book-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, books));\n  }\n\n} // binding query to component (getBooksQuery)(BookList)\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/zacharycrowell/Desktop/graphql-playlist/client/src/components/BookList.js"],"names":["React","Component","gql","graphql","getBooksQuery","BookList","componentDidMount","books","displayBooks","data","props","loading","map","book","id","name","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAGA,MAAMC,aAAa,GAAGF,GAAH,mBAAnB;AASA,OAAO,MAAMG,QAAN,SAAuBJ,SAAvB,CAAiC;AACpCK,EAAAA,iBAAiB,GAAE;AACf,UAAMC,KAAK,GAAG,KAAKC,YAAL,EAAd;AACH;;AACDA,EAAAA,YAAY,GAAE;AACV,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,QAAGA,IAAI,CAACE,OAAR,EAAgB;AACZ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,KAFD,MAEO;AACH,aAAOF,IAAI,CAACF,KAAL,CAAWK,GAAX,CAAgBC,IAAI,IAAI;AAC3B,eACA;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBD,IAAI,CAACE,IAAxB,CADA;AAGH,OAJM,CAAP;AAKH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,KADL,CADJ,CADJ;AAOH;;AAxBmC,C,CA0BxC;;AACA,eAAeJ,OAAO,CAACC,aAAD,CAAP,CAAuBC,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\n\n\nconst getBooksQuery = gql`\n{\n    books{\n        name\n        id\n    }\n}\n`\n\nexport class BookList extends Component {\n    componentDidMount(){\n        const books = this.displayBooks()\n    }\n    displayBooks(){\n        var data = this.props.data\n        if(data.loading){\n            return(<div>Loading books...</div>)\n        } else {\n            return data.books.map( book => {\n                return(\n                <li key={book.id}>{book.name}</li>\n                )\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <ul id=\"book-list\">\n                    {books}\n                </ul>\n            </div>\n        )\n    }\n}\n// binding query to component (getBooksQuery)(BookList)\nexport default graphql(getBooksQuery)(BookList)\n"]},"metadata":{},"sourceType":"module"}